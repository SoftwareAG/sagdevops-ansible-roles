---

  - debug: 
      msg: Begin tasks in update-user-password.yml

  - debug: var=rvar_devportal_rest_users_updatepassword verbosity=1

  - name: fail if mandatory params not specified
    fail: 
      msg: "A mandatory param was not defined, cannot do anything."
    when: item is not defined
    with_items:
      - "{{ rvar_devportal_rest_users_updatepassword }}"
      - "{{ rvar_devportal_rest_users_updatepassword.newPassword }}"

  - name: First reset the variables that will get used
    set_fact:
      _devportal_userid: ""

  - name: Assign the id if specified in the request object
    set_fact:
      _devportal_userid: "{{ rvar_devportal_rest_users_updatepassword.userid }}"
    when: rvar_devportal_rest_users_updatepassword.userid is defined

######## fetch the userid if lookup_userid is specified

  - name: Get user id by lookup
    block:

      - debug: 
          msg: Fetching the user ID if identified in rvar_devportal_rest_users_updatepassword.lookup_id

      - include_tasks: "get-single-id.yml"
        vars:
          rvar_object_filter: "{{ rvar_devportal_rest_users_updatepassword.lookup_id }}"

      - name: Save the id
        set_fact:
          _devportal_userid: "{{ rest_response_object_id }}"
        when: rest_response_object_id is defined

    when: rvar_devportal_rest_users_updatepassword.lookup_userid is defined

######## Update the password for user

  - name: fail if _devportal_userid is empty or not defined
    fail: 
      msg: "UserID may not be empty or null at this point"
    when: _devportal_userid is not defined or _devportal_userid == ""

  - debug:
      msg: "Updating password for user id: {{ _devportal_userid }}"

  - name: Updating password
    uri:
      url: "{{ rvar_devportal_rest_base }}/{{ rvar_devportal_rest_objtype_users }}/{{ _devportal_userid }}/updatepassword"
      method: PUT
      force_basic_auth: yes
      user: "{{ rvar_devportal_rest_auth_username }}"
      password: "{{ rvar_devportal_rest_auth_password }}"
      body_format: form-urlencoded
      body: 
        newPassword: "{{ rvar_devportal_rest_users_updatepassword.newPassword }}"
      validate_certs: false
      return_content: yes
      status_code: 200, 201
      timeout: 30
    no_log: "{{ not ( disable_no_log | default(false,true) ) }}"
    register: rest_response

  - name: Print returned json dictionary
    debug:
      var: rest_response
      verbosity: 1