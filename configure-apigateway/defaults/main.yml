---
## Config files
product_instance_name: "default"
runtime_profile_home: "{{ webmethods_install_dir }}/profiles/IS_{{ product_instance_name }}"
runtime_instance_home: "{{ webmethods_install_dir }}/IntegrationServer/instances/{{ product_instance_name }}"
custom_wrapper_file: "{{ runtime_profile_home }}/configuration/custom_wrapper.conf"
runtime_instance_config_file: "{{ runtime_instance_home }}/config/server.cnf"
webmethods_terracotta_license_path: "{{ webmethods_install_dir }}/common/conf/terracotta-license.key"
apigateway_elasticsearch_config_file: "{{ runtime_instance_home }}/packages/WmAPIGateway/config/resources/elasticsearch/config.properties"
apigateway_kibana_config_file: "{{ runtime_profile_home }}/apigateway/dashboard/config/kibana.yml"
apigateway_ui_configuration_config_file: "{{ runtime_profile_home }}/apigateway/config/uiconfiguration.properties"
apigateway_ui_props_configs_dir: "{{ runtime_profile_home }}/configuration/com.softwareag.platform.config.propsloader"
apigateway_saml_group_mapping_file_path: "{{ runtime_instance_home }}/packages/WmAPIGateway/config/resources/security/saml_groups_mapping.xml"
apigateway_external_configs_source_dir: "{{ runtime_instance_home }}/packages/WmAPIGateway/resources/configuration"
apigateway_external_configs_file_path: "{{ apigateway_external_configs_source_dir }}/custom-configs.yml"
apigateway_external_configs_source_file_path: "{{ apigateway_external_configs_source_dir }}/config-sources.yml"
configs_enabled: true

####################################
## gateway UI URLs
####################################

apigateway_base_uri: "http://localhost:9072"
apigateway_base_path: "{{ apigateway_base_uri }}/apigatewayui"
apigateway_samlsso_autogenerated_metadata_url: "{{ apigateway_base_path }}/saml/sso/metadata"

####################################
## gateway rest apis URLs
####################################

# rest connectivity
apigateway_rest_base_uri: "{{ apigateway_rest_protocol }}://{{ apigateway_rest_host }}:{{ apigateway_rest_port }}"
apigateway_rest_protocol: "http"
apigateway_rest_host: "localhost"
apigateway_rest_port: 5555
apigateway_rest_no_check_certs: false

# general
apigateway_rest_base_path: "{{ apigateway_rest_base_uri }}/rest/apigateway"
apigateway_rest_users_api: "{{ apigateway_rest_base_path }}/users"
apigateway_rest_urlaliases_api: "{{ apigateway_rest_base_path }}/urlaliases"
apigateway_rest_groups_api: "{{ apigateway_rest_base_path }}/groups"
apigateway_rest_accessprofiles_api: "{{ apigateway_rest_base_path }}/accessProfiles"

# applications and apis
apigateway_rest_applications_api: "{{ apigateway_rest_base_path }}/applications"
apigateway_rest_apis_api: "{{ apigateway_rest_base_path }}/apis"

# packages and plans
apigateway_rest_plans_api: "{{ apigateway_rest_base_path }}/plans"
apigateway_rest_packages_api: "{{ apigateway_rest_base_path }}/packages"

# aliases
apigateway_rest_alias_api: "{{ apigateway_rest_base_path }}/alias"

# is configs
apigateway_rest_is_baseapi: "{{ apigateway_rest_base_path }}/is"
apigateway_rest_is_keystore: "{{ apigateway_rest_is_baseapi }}/keystore"
apigateway_rest_is_truststore: "{{ apigateway_rest_is_baseapi }}/truststore"

# ports
apigateway_rest_is_ports: "{{ apigateway_rest_base_path }}/ports"
apigateway_rest_is_ports_accessmode: "{{ apigateway_rest_is_ports }}/global/accessMode"
apigateway_rest_is_ports_ipaccessmode: "{{ apigateway_rest_is_ports }}/global/ipAccessMode"

#listenerKey="<protocol | upper case><Listener | case sensitive>@<port>"
# Request URL: https://apigateway105-ui-ssainfra-devops.clouddemo.saggov.com/apigatewayui/apigateway/ports?listenerKey=HTTPSListener@6444&pkg=WmRoot
# >> do the request...
# >>> if unqieuID is not there, the port does not exist and it's a new one...
# >>> if unqieuID is there, the port does exist and it's an update

# configurations
apigateway_rest_configurations_baseapi: "{{ apigateway_rest_base_path }}/configurations"
apigateway_rest_configurations_loadBalancer: "{{ apigateway_rest_configurations_baseapi }}/loadBalancer"
apigateway_rest_configurations_cache: "{{ apigateway_rest_configurations_baseapi }}/cache"
apigateway_rest_configurations_destination_apiportal: "{{ apigateway_rest_configurations_baseapi }}/apiPortalDestinationConfig"
apigateway_rest_configurations_destination_gateway: "{{ apigateway_rest_configurations_baseapi }}/gatewayDestinationConfig"
apigateway_rest_configurations_keytruststores: "{{ apigateway_rest_configurations_baseapi }}/keystore"
apigateway_rest_configurations_extendedsettings: "{{ apigateway_rest_configurations_baseapi }}/settings"
apigateway_rest_configurations_ldapsettings: "{{ apigateway_rest_configurations_baseapi }}/ldapConfig"
apigateway_rest_configurations_samlsso: "{{ apigateway_rest_configurations_baseapi }}/samlsso"

# portal gateways
apigateway_rest_configurations_apiportal_connect: "{{ apigateway_rest_base_path }}/portalGateways"

# Promotion Management
apigateway_rest_promotionmgt_promotions: "{{ apigateway_rest_base_path }}/promotion"
apigateway_rest_promotionmgt_stages: "{{ apigateway_rest_base_path }}/stages"
apigateway_rest_promotionmgt_rollbacks: "{{ apigateway_rest_base_path }}/rollback"

# Archive management (imports, exports)
apigateway_rest_archives: "{{ apigateway_rest_base_path }}/archive"

#POST:
# {"factoryKey":"webMethods/HTTPS","listenerKey":null,"oldPkg":null,"listenerType":null,"ssl":"true","certChain":"","enable":"no","port":"5443","portAlias":"SAGSecurePort","portDescription":null,"pkg":"WmRoot","bindAddress":null,"maxQueue":"200","keepAliveTimeout":"20000","threadPool":"true","minThread":"1","maxThread":"5","threadPriority":"5","curDelay":null,"useJSSE":"true","clientAuth":"none","idProvider":"","krbJaasContext":null,"krbClientPrincipal":null,"krbClientPassword":null,"retype_krbClientPassword":null,"krbServicePrincipalForm":"username","krbServicePrincipal":null,"keyStore":"SAGKeystore","alias":"1","trustStore":"SAGTruststore"}
# PUT:
# {"factoryKey":"webMethods/HTTP","listenerKey":"HTTPSListener@5443","oldPkg":"WmRoot","listenerType":"Regular","ssl":"true","certChain":"","enable":"no","port":5443,"portAlias":"SAGSecurePort","portDescription":"Integration Server HTTPS port: 5443","pkg":"WmRoot","bindAddress":null,"maxQueue":"200","keepAliveTimeout":"20000","threadPool":"true","minThread":"1","maxThread":"5","threadPriority":"5","curDelay":"0","useJSSE":"yes","clientAuth":"none","idProvider":"","krbJaasContext":null,"krbClientPrincipal":null,"krbClientPassword":null,"retype_krbClientPassword":null,"krbServicePrincipalForm":"username","krbServicePrincipal":null,"keyStore":"SAGKeystore","alias":"1","trustStore":"SAGTruststore"}

####################################
## default config values
####################################

## global JVM settings
apigateway_jvm_heap_min: 1024
apigateway_jvm_heap_max: 2048
apigateway_jvm_params: {}

apigateway_kibana_port: 9405

## external elastic search
external_elasticsearch_inventory_pattern: ""
external_elasticsearch_protocol: http
external_elasticsearch_port: 9240

## external terracotta
is_clustering_use_internal_db: true
external_terracotta_inventory_pattern: ""
external_terracotta_port: 9510

## user passwords setting
apigateway_rest_login_username: "Administrator"
apigateway_rest_login_password: ""
apigateway_update_local_user_id: ""
apigateway_update_local_user_password: ""

## load balancer settings
webmethods_apigateway_loadbalancers_http_urls: []
webmethods_apigateway_loadbalancers_https_urls: []
webmethods_apigateway_loadbalancers_websocket_urls: []
webmethods_apigateway_loadbalancers_webapp_url: ""

## gateway UI SSL certs
webmethods_apigateway_ui_props_https_keystore_path:
webmethods_apigateway_ui_props_https_keystore_password:
webmethods_apigateway_ui_props_https_truststore_path:
webmethods_apigateway_ui_props_https_truststore_password:

## user mgt services payloads
apigateway_configparams_rest_usermgt_users:
  # - loginId: something.user
  #   firstName: 'something'
  #   lastName: 'user'
  #   emailAddresses:
  #     - something@email.com
  #   allowDigestAuth: true
  #   active: true
  #   language: english

apigateway_configparams_rest_usermgt_groups:
  # - name: groupname1
  #   description: group description
  #   empty_user_ids: false
  #   user_loginids_add:
  #     - "loginid1"
  #     - "loginid2"

apigateway_configparams_rest_usermgt_accessprofiles:
  # - name: sed consequat
  #   description: Ut sit
  #   privilege:
  #     empty: false
  #   groupIds:
  #     - pariatur
  #     - consequat dolore
  #   teamAdmin:
  #     userIds:
  #       - Duis sed laboris veniam
  #       - Duis proident
  #     groupIds:
  #       - ut consequat cupidatat
  #       - deserunt dolor

## api gateway truststore format
webmethods_apigateway_truststore:
  # keyStoreName: "<string>"
  # keyStoreType: "<string>"
  # keyStoreProvider: "<string>"
  # keyStorePassword: "<string>"
  # uploadFileName: "<string>"
  # keyStoreDescription: "<string>"
  # fileContent: "@<file_path>"

## api gateway truststore format
webmethods_apigateway_keystore:
  # keyStoreName: "<string>"
  # keyStoreType: "<string>"
  # keyStoreProvider: "<string>"
  # keyStorePassword: "<string>"
  # uploadFileName: "<string>"
  # keyStoreDescription: "<string>"
  # fileContentPath: "<string>"

webmethods_apigateway_keytruststore_configuration:
  # keystoreName: "<string>"
  # signingAlias: "<string>"
  # truststoreName: "<string>"
  # outboundKeystoreName: "<string>"
  # outboundKeyAlias: "<string>"
  # outboundTruststoreName: "<string>"

## api portal registration - format
webmethods_apigateway_portalgateway:
  # id: "<string>"
  # refId: "<string>"
  # gatewayName: "<string>"
  # gatewayDescription: "<string>"
  # gatewayUsername: "<string>"
  # gatewayPassword: "<string>"
  # gatewayURL: "<string>"
  # version: "<string>"
  # stageName: "<string>"
  # published: "<boolean>"
  # externalPortal:
  #   endpointTenant: "<string>"
  #   endpointURL: "<string>"
  #   endpointUsername: "<string>"
  #   endpointPassword: "<string>"
  #   type: "<string>"

webmethods_apigateway_promotions_stages:
  # - name: "<string>"
  #   description: "<string>"
  #   url: "<string>"
  #   username: "<string>"
  #   password: "<string>"
  #   keystoreAlias: "<string>"
  #   keyAlias: "<string>"
  # - name: "<string>"
  #   description: "<string>"
  #   url: "<string>"
  #   username: "<string>"
  #   password: "<string>"
  #   keystoreAlias: "<string>"
  #   keyAlias: "<string>"

webmethods_apigateway_ports_types_internals:
  regular_https:
    factoryKey: webMethods/HTTPS
    ssl: "true"
    useJSSE: "true"
    pkg: WmRoot
    protocol: HTTPS
    listenerType: Regular
  regular_http:
    factoryKey: webMethods/HTTP
    ssl: "false"
    pkg: WmRoot
    protocol: HTTP
    listenerType: Regular
  external_http:
    factoryKey: webMethods/HTTP
    ssl: "false"
    pkg: WmRoot
    protocol: HTTP
    listenerType: revinvoke
  external_https:
    factoryKey: webMethods/HTTPS
    ssl: "true"
    useJSSE: "true"
    pkg: WmRoot
    protocol: HTTPS
    listenerType: revinvoke
  internal_http:
    factoryKey: webMethods/HTTP
    ssl: "false"
    pkg: WmRoot
    protocol: HTTP
    listenerType: regularinternal
  internal_https:
    factoryKey: webMethods/HTTPS
    ssl: "true"
    useJSSE: "true"
    pkg: WmRoot
    protocol: HTTPS
    listenerType: regularinternal
  websocket:
    factoryKey: webMethods/WebSocket
    pkg: WmRoot
    protocol: WebSocket
    listenerType: websocket

webmethods_apigateway_ports_list:
  # - port_type: regular_https
  #   port_detail:
  #     listenerKey:
  #     oldPkg:
  #     certChain: ''
  #     enable: 'no'
  #     port: '5443'
  #     portAlias: SAGSecurePort
  #     portDescription:
  #     bindAddress:
  #     maxQueue: '200'
  #     keepAliveTimeout: '20000'
  #     threadPool: 'true'
  #     minThread: '1'
  #     maxThread: '5'
  #     threadPriority: '5'
  #     curDelay:
  #     clientAuth: none
  #     idProvider: ''
  #     krbJaasContext:
  #     krbClientPrincipal:
  #     krbClientPassword:
  #     retype_krbClientPassword:
  #     krbServicePrincipalForm: username
  #     krbServicePrincipal:
  #     keyStore:
  #     alias:
  #     trustStore:
  #   access_mode:
  #     accessMode: allow
  #     pkg: WmRoot
  #     port: ""
  #     services: []
  #   ip_access_mode:
  #     ipAccessType: allow
  #     pkg: WmRoot
  #     hostsList: []

## extended settings - is runtime settings (note: this must be run on all the nodes)
webmethods_apigateway_extended_settings_isruntime_watt_keys: {}
webmethods_apigateway_extended_settings_coregateway_extended_keys: {}

## ldap settings
webmethods_apigateway_ldap_settings:
  # ldapConfig:
  #   cacheSize: "<string>"
  #   cacheTTL: "<string>"
  #   provider: "<string>"
  #   ldapDirectoryList:
  #     - index: "<integer>"
  #       url: "<string>"
  #       principal: "<string>"
  #       password: "<string>"
  #       timeout: "<string>"
  #       poolMin: "<string>"
  #       poolMax: "<string>"
  #       Distinguished Name (DN) method: "<boolean>"
  #       dnPrefix: "<string>"
  #       dnSuffix: "<string>"
  #       uidProp: "<string>"
  #       userRootDn: "<string>"
  #       group: "<string>"
  #       memberAttribute: "<string>"
  #       groupIdProperty: "<string>"
  #       groupRootDN: "<string>"
  #     - index: "<integer>"
  #       url: "<string>"
  #       principal: "<string>"
  #       password: "<string>"
  #       timeout: "<string>"
  #       poolMin: "<string>"
  #       poolMax: "<string>"
  #       Distinguished Name (DN) method: "<boolean>"
  #       dnPrefix: "<string>"
  #       dnSuffix: "<string>"
  #       uidProp: "<string>"
  #       userRootDn: "<string>"
  #       group: "<string>"
  #       memberAttribute: "<string>"
  #       groupIdProperty: "<string>"
  #       groupRootDN: "<string>"
  #   cdsRunning: "<boolean>"

## saml settings
rvar_apigateway_saml_groups_mapping_list:
  # - saml_group_name: <string>
  #   local_group_name: <string>
  # - saml_group_name: <string>
  #   local_group_name: <string>

rvar_apigateway_saml_settings:
  # saml_enabled: "<boolean>"
  # saml_redirect: "/saml/sso/login"
  # saml_sp_id: "<string>"
  # saml_assertion_signed: "<boolean>"
  # saml_authreq_signed:  "<boolean>"
  # saml_sp_metadata_url: "<string>"
  # saml_ldp_metadata_url: "<string>"
  # saml_keystore_type: "<string>"
  # saml_keystore_location: "<string>"
  # saml_keystore_pwd: "<string>"
  # saml_defaultkey_alias: "<string>"
  # saml_defaultkey_pwd: "<string>"
  # saml_signkey_alias: "<string>"
  # saml_signkey_pwd: "<string>"
  # saml_encrypkey_alias: "<string>"
  # saml_encrypkey_pwd: "<string>"

rvar_apigateway_archive_imports:
  # - path: "<string>"
  #   overwrite: "*"
  #   preserveAssetState: "true"

# note: overwrite can have various different values for overwrite: "apis,policies,policyactions,..." or "*" for overwrite all
rvar_apigateway_archive_imports_s3_downloads:
  # - bucket_path: "<string>"
  #   local_path: "<string>"
  #   overwrite: "*"
  #   preserveAssetState: "true"
  #   fixingMissingVersions: "true"

# api packages to add or update
# the following attributes with "custom_" will be transformed to corresponding attributes of internal ids:
# - custom_apiIdsByFilter --> apiIds
# - custom_planIdsByFilter --> planIds
# - custom_policyIdsByFilter --> policyIds
rvar_apigateway_packages:
  # - name: package_name
  #   version: "1.0"
  #   deprecated: false
  #   custom_apiIdsByFilter: []
  #   # apiIds: []
  #   custom_planIdsByFilter: []
  #   # planIds: []
  #   publishedPortals: []
  #   custom_policyIdsByFilter: []
  #   # policyIds: []
  #   active: false

# api plans to add or update
# the following attributes with "names" will be transformed to corresponding attributes of internal ids:
# - policiesNames --> policies
# - quota.enforcementPolicyName --> quota.enforcementPolicy
# - packageNamesVersion --> packageIds
rvar_apigateway_plans:
  # - name: plan_name
  #   version: "1.0"
  #   deprecated: false
  #   isProtected: false
  #   policiesNames: []
  #   # policies: []
  #   cost:
  #     currency:
  #     value:
  #     duration:
  #   quota:
  #     enforcementPolicyName: ""
  #     # enforcementPolicy: ""
  #   protected: false
  #   packageNamesVersion: []
  #   # packageIds: []

# applications to add or update
# the following attributes with "names/version" will be transformed to corresponding attributes of internal ids:
# - custom_registerAPIsByFilter --> triggers the registration apis call
rvar_apigateway_applications:
  # - name: Sample Application
  #   description: Sample application needing access to the APIs
  #   version: "1.0"
  #   contactEmails: []
  #   siteURLs: []
  #   identifiers:
  #     - value:
  #         - partner_identifier
  #       name: Partner ID
  #       key: partnerId
  #     - value:
  #         - 10.60.30.1-10.60.30.30
  #       name: IP Addresses
  #       key: ipAddressRange
  #     - value:
  #         - '{"claim_name":"claim_value"}'
  #       name: test
  #       key: jwtClaims
  #     - value:
  #         - localhost
  #       name: Hostname
  #       key: hostNameAddress
  #   consumingAPIs: []
  #   isSuspended: false
  #   custom_registerAPIsByFilter: []
  #   jsOrigins: []
  #   authStrategyIds: []
  #   restrictViewAsset: false
  #   teams: []

# APIs to publish
# each list item will publish a list of APIs to a list of communities using the same portalGatewayId
rvar_apigateway_apis_publish_groups:
  - lookup_portalGatewayId:
      name: ""
      version: ""
    lookup_communityIds:
      - name: ""
        version: ""
      - name: ""
        version: ""
    lookup_apiIds:
      - name: ""
        version: ""
      - name: ""
        version: ""
  - lookup_portalGatewayId:
      name: ""
      version: ""
    lookup_communityIds:
      - name: ""
        version: ""
      - name: ""
        version: ""
    lookup_apiIds:
      - name: ""
        version: ""
      - name: ""
        version: ""

# Packages to publish
# each list item will publish a list of Packages to a list of communities using the same portalGatewayId
rvar_apigateway_packages_publish_groups:
  - lookup_portalGatewayId:
      name: ""
      version: ""
    lookup_communityIds:
      - name: ""
        version: ""
      - name: ""
        version: ""
    lookup_packageIds:
      - name: ""
        version: ""
      - name: ""
        version: ""
  - lookup_portalGatewayId:
      name: ""
      version: ""
    lookup_communityIds:
      - name: ""
        version: ""
      - name: ""
        version: ""
    lookup_packageIds:
      - name: ""
        version: ""
      - name: ""
        version: ""