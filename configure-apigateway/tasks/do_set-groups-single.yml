---

  - debug: var=apigateway_configparams_rest_usermgt_group_single verbosity=3

  - name: First, get all groups to determine if the group with same name exists
    uri:
      url: "{{ apigateway_rest_groups_api }}"
      method: GET
      user: "{{ apigateway_rest_login_username }}"
      password: "{{ apigateway_rest_login_password }}"
      return_content: yes
      force_basic_auth: yes
      validate_certs: false
      status_code: [200]
      body_format: json
      timeout: 30
    register: rest_response_getall

  - name: Print response
    debug:
      var: rest_response_getall.json
      verbosity: 3

  - name: Parse response and find the group id based on group name
    set_fact:
      rest_response_filter_groupnames:
        - "{{ apigateway_configparams_rest_usermgt_group_single.name }}"
      rest_response_group_ids: "{{ lookup('template', 'apigateway_rest_usermgt_responseparsing_groups_ids_by_name.json.j2') }}"

  - name: group ids found from the rest response
    debug: var=rest_response_group_ids verbosity=3

  - name: Update the existing group if it existed
    block:

      - name: get the existing group before updating it
        uri:
          url: "{{ apigateway_rest_groups_api }}/{{ rest_response_group_ids | first }}"
          method: GET
          user: "{{ apigateway_rest_login_username }}"
          password: "{{ apigateway_rest_login_password }}"
          return_content: yes
          force_basic_auth: yes
          validate_certs: false
          status_code: [200, 201]
          body_format: json
          timeout: 30
        register: rest_response_get
      
      - name: Print response
        debug:
          var: rest_response_get.json
          verbosity: 3

      - name: Merge the existing group content with the updated content
        set_fact:
          apigateway_configparams_rest_usermgt_group_single_toupdate: "{{ rest_response_get.json.groups[0] | combine(apigateway_configparams_rest_usermgt_group_single,recursive=True) }}"

      - name: Update the existing group
        uri:
          url: "{{ apigateway_rest_groups_api }}/{{ apigateway_configparams_rest_usermgt_group_single_toupdate.id }}"
          method: PUT
          user: "{{ apigateway_rest_login_username }}"
          password: "{{ apigateway_rest_login_password }}"
          return_content: yes
          body: "{{ apigateway_configparams_rest_usermgt_group_single_toupdate | to_json }}"
          force_basic_auth: yes
          validate_certs: false
          status_code: [200, 201]
          body_format: json
          timeout: 30
        register: rest_response_mutate_update
        
      - name: Response for new updated group
        debug: var=rest_response_mutate_update verbosity=3

    when: rest_response_group_ids is defined and rest_response_group_ids | length > 0

  - name: Create the group if it does not exist
    block:

      - name: Create a new group
        uri:
          url: "{{ apigateway_rest_groups_api }}"
          method: POST
          user: "{{ apigateway_rest_login_username }}"
          password: "{{ apigateway_rest_login_password }}"
          return_content: yes
          body: "{{ apigateway_configparams_rest_usermgt_group_single | default({}) | to_json }}"
          force_basic_auth: yes
          validate_certs: false
          status_code: [200, 201]
          body_format: json
          timeout: 30
        register: rest_response_mutate_create

      - name: Response for new created group
        debug: var=rest_response_mutate_create verbosity=3

    when: rest_response_group_ids is not defined or rest_response_group_ids | length == 0