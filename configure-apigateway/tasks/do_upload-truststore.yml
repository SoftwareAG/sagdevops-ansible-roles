---

  - name: Get current API Gateway truststore
    uri:
      url: "{{ apigateway_rest_is_truststore }}"
      method: GET
      user: "{{ apigateway_rest_login_username }}"
      password: "{{ apigateway_rest_login_password }}"
      return_content: yes
      force_basic_auth: yes
      validate_certs: false
      status_code: [200]
      body_format: json
      timeout: 30
    register: get_all_truststores

  - name: Response for All Current truststores
    debug: var=get_all_truststores verbosity=3

  - name: Parse response and extract name fields
    set_fact:
      get_all_truststore_names: "{{ lookup('template', 'apigateway_restapi_get_truststore_names.json.j2') }}"

  - name: All current truststore names
    debug: var=get_all_truststore_names verbosity=3

  - name: If new truststore data does not exist, then URI is the generic one
    set_fact:
      curl_wrapper_target_uri: "{{ apigateway_rest_is_truststore }}"
    when: not webmethods_apigateway_truststore.keyStoreName in get_all_truststore_names

  - name: If new truststore data already exists, then URI contains the name of the trsustore
    set_fact:
      curl_wrapper_target_uri: "{{ apigateway_rest_is_truststore }}/{{ webmethods_apigateway_truststore.keyStoreName }}"
    when: webmethods_apigateway_truststore.keyStoreName in get_all_truststore_names

  - name: CURL URI
    debug: var=curl_wrapper_target_uri verbosity=3

  - name: Upload new truststore to apigateway
    import_role:
      name: curl-wrapper
    vars:
      command: upload-multipart-formdata
      curl_wrapper_basicauth_user: "{{ apigateway_rest_login_username }}"
      curl_wrapper_basicauth_password: "{{ apigateway_rest_login_password }}"
      curl_wrapper_multipart_formdata_fields: "{{ webmethods_apigateway_truststore }}"
      curl_wrapper_headers_fields:
        "Accept": "application/json"