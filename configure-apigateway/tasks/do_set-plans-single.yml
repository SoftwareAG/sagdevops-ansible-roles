---

  - debug: var=rvar_apigateway_plans_single verbosity=1

  - name: First, get the id based on the filter (returned in var rest_response_object_id)
    include_tasks: "plans/get-single-id.yml"
    vars:
      rvar_object_filter:
        name: "{{ rvar_apigateway_plans_single.name }}"
        version: "{{ rvar_apigateway_plans_single.version }}"

  - name: Update the existing plan if it existed (ie. if the rest_response_object_id is not empty)
    block:

      - name: get the existing plan before updating it
        uri:
          url: "{{ apigateway_rest_plans_api }}/{{ rest_response_object_id }}"
          method: GET
          user: "{{ apigateway_rest_login_username }}"
          password: "{{ apigateway_rest_login_password }}"
          return_content: yes
          force_basic_auth: yes
          validate_certs: "{{ not ( apigateway_rest_no_check_certs | default() | bool ) }}"
          status_code: [200, 201]
          body_format: json
          timeout: 30
        register: rest_response_get
      
      - name: Print full json object response
        debug:
          var: rest_response_get.json
          verbosity: 1

      - name: Create the initial update dictionary
        set_fact:
          current_plan: "{{ rest_response_get.json.planResponse }}"
          rvar_apigateway_plans_single_toupdate: {}
        
      - name: Build the dict to updated, starting with the current object, removing the fields we don't need/want in the process
        set_fact:
          rvar_apigateway_plans_single_toupdate: "{{ rvar_apigateway_plans_single_toupdate | combine({item.key: item.value}) }}"
        when: item.key not in ['id']
        with_dict: "{{ current_plan }}"

      - name: Overwrite the values to update over the existing object
        set_fact:
          rvar_apigateway_plans_single_toupdate: "{{ rvar_apigateway_plans_single_toupdate | combine(rvar_apigateway_plans_single,recursive=True) }}"
        
      - debug: var=rvar_apigateway_plans_single_toupdate verbosity=1

      - name: Update the existing plan
        uri:
          url: "{{ apigateway_rest_plans_api }}/{{ rest_response_object_id }}"
          method: PUT
          user: "{{ apigateway_rest_login_username }}"
          password: "{{ apigateway_rest_login_password }}"
          return_content: yes
          body: "{{ rvar_apigateway_plans_single_toupdate | to_json }}"
          force_basic_auth: yes
          validate_certs: "{{ not ( apigateway_rest_no_check_certs | default() | bool ) }}"
          status_code: [200, 201]
          body_format: json
          timeout: 30
        register: rest_response_mutate_update
        
      - name: Response for new updated plan
        debug: var=rest_response_mutate_update verbosity=1

    when: rest_response_object_id is defined and rest_response_object_id != ""

  - name: Create a new plan if it does not exist (ie. if the rest_response_object_id is empty)
    block:

      - name: Create a new plan
        uri:
          url: "{{ apigateway_rest_plans_api }}"
          method: POST
          user: "{{ apigateway_rest_login_username }}"
          password: "{{ apigateway_rest_login_password }}"
          return_content: yes
          body: "{{ rvar_apigateway_plans_single | default({}) | to_json }}"
          force_basic_auth: yes
          validate_certs: "{{ not ( apigateway_rest_no_check_certs | default() | bool ) }}"
          status_code: [200, 201]
          body_format: json
          timeout: 30
        register: rest_response_mutate_create

      - name: Response for new created plan
        debug: var=rest_response_mutate_create verbosity=1

    when: rest_response_object_id is not defined or rest_response_object_id == ""