---

## enable/disable a port
## Parameters:
# - ports_listenerkey: the ID of the port
# - ports_enable: true/false

  - debug: 
      msg: Begin tasks in ports/disable.yml

  - debug: var=ports_listenerkey verbosity=1
  - debug: var=ports_pkg verbosity=1
  - debug: var=ports_enable verbosity=1

  - name: fail if mandatory params not specified
    fail: 
      msg: "A mandatory param was not defined, cannot do anything."
    when: item is not defined
    with_items:
      - "{{ ports_listenerkey }}"
      - "{{ ports_pkg }}"
      - "{{ ports_enable }}"

######## set publish body object

  - name: Create the request body object
    set_fact:
      _ports_operation_body:
        listenerKey: "{{ ports_listenerkey }}"
        pkg: "{{ ports_pkg }}"

  - name: debug update operation body object
    debug: var=_ports_operation_body verbosity=1

######## Enable the port

  - name: Enable the port
    block:

      - name: Enable the port
        uri:
          url: "{{ apigateway_rest_is_ports }}/enable"
          method: PUT
          user: "{{ apigateway_rest_login_username }}"
          password: "{{ apigateway_rest_login_password }}"
          return_content: yes
          body: "{{ _ports_operation_body | to_json }}"
          force_basic_auth: yes
          validate_certs: "{{ not ( apigateway_rest_no_check_certs | default() | bool ) }}"
          status_code: [200, 201]
          body_format: json
          timeout: 30
        register: rest_ports_operation_response

    when: ports_enable | bool == true

######## Disable the port

  - name: Disable the port
    block:

      - name: Disable the port
        uri:
          url: "{{ apigateway_rest_is_ports }}/disable"
          method: PUT
          user: "{{ apigateway_rest_login_username }}"
          password: "{{ apigateway_rest_login_password }}"
          return_content: yes
          body: "{{ _ports_operation_body | to_json }}"
          force_basic_auth: yes
          validate_certs: "{{ not ( apigateway_rest_no_check_certs | default() | bool ) }}"
          status_code: [200, 201]
          body_format: json
          timeout: 30
        register: rest_ports_operation_response

    when: ports_enable | bool == false

######## Final

  - name: Print response
    debug:
      var: rest_ports_operation_response.json
      verbosity: 1


