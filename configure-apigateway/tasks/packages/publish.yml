---

## publish an api to portal - by default, ALL API gateway endpoints will get published 
## Parameters:
# - publish_packageId: the ID of the API Package to publish
# - publish_portalGatewayId: the ID of the portal gateway to use
# - publish_communityIds: the API Portal community IDs to publish the API to

  - debug: 
      msg: Begin tasks in packages/publish.yml

  - debug: var=publish_packageId verbosity=1
  - debug: var=publish_portalGatewayId verbosity=1
  - debug: var=publish_communityIds verbosity=1

  - name: fail if mandatory params not specified
    fail: 
      msg: "A mandatory param was not defined, cannot do anything."
    when: item is not defined
    with_items:
      - "{{ publish_packageId }}"
      - "{{ publish_portalGatewayId }}"
      - "{{ publish_communityIds }}"

######## set publish body object

  - name: Create the request body object
    set_fact:
      _publish_body:
        portalGatewayId: "{{ publish_portalGatewayId }}"
        communities: "{{ publish_communityIds }}"

  - name: debug final api package publish body object
    debug: var=_publish_body verbosity=1

######## publish the api

  - name: Publish API Package
    uri:
      url: "{{ apigateway_rest_packages_api }}/{{ publish_packageId }}/publish"
      method: PUT
      user: "{{ apigateway_rest_login_username }}"
      password: "{{ apigateway_rest_login_password }}"
      return_content: yes
      body: "{{ _publish_body | to_json }}"
      force_basic_auth: yes
      validate_certs: "{{ not ( apigateway_rest_no_check_certs | default() | bool ) }}"
      status_code: [200, 201]
      body_format: json
      timeout: 30
    register: rest_response_publish

  - name: Print response
    debug:
      var: rest_response_publish.json
      verbosity: 1