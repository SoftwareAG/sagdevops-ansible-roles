---


  - name: check if package already installed
    stat: 
      path: "{{ runtime_instance_package_home }}/{{ (webmethods_packages_remote_s3_bucket_path | basename | splitext)[0] }}/manifest.rel"
    register: check_package_installed

  - name: Package installed status
    debug:
      var: check_package_installed.stat.exists

  - name: Set changed flag to false if not defined
    set_fact: 
      configure_integrationserver_install_package_changed: false
    when: configure_integrationserver_install_package_changed is not defined

  - name: Install package only if it's not already there
    block:

      - name: getting the packages from s3 to apply on integration server
        include_role:
          name: aws-wrapper
        vars:
          command: "getfroms3"
          getfroms3_bucket_name: "{{ webmethods_packages_remote_s3_bucket_name | default('', true) }}"
          getfroms3_bucket_path: "{{ webmethods_packages_remote_s3_bucket_path | default('', true) }}"
          getfroms3_local_path: "{{ runtime_instance_package_home }}/{{ webmethods_packages_remote_s3_bucket_path | basename }}"
        
      - name: Create the extracted dir on the remote machine if they don't exist
        file:
          path: "{{ runtime_instance_package_home }}/{{ (webmethods_packages_remote_s3_bucket_path | basename | splitext)[0] }}"
          state: directory

      - name: Unarchive the packages on the remote machine
        unarchive:
          src: "{{ runtime_instance_package_home }}/{{ webmethods_packages_remote_s3_bucket_path | basename }}"
          dest: "{{ runtime_instance_package_home }}/{{ (webmethods_packages_remote_s3_bucket_path | basename | splitext)[0] }}"
          remote_src: yes

      - name: Delete the archive once extracted
        file:
          path: "{{ runtime_instance_package_home }}/{{ webmethods_packages_remote_s3_bucket_path | basename }}"
          state: absent
      
      - name: check if package installed
        stat: 
          path: "{{ runtime_instance_package_home }}/{{ (webmethods_packages_remote_s3_bucket_path | basename | splitext)[0] }}/manifest.rel"
        register: webmethods_package_just_installed

      - name: Set changed flag to true
        set_fact:
          configure_integrationserver_install_package_changed: true
  
    when: check_package_installed.stat.exists == false or webmethods_packages_force_install == true