---

  - debug: var=webmethods_sum_install_patches_runner verbosity=3
  
  - name: fail if mandatory params not specified
    fail: 
      msg: "A mandatory param was not defined, cannot do anything."
    when: item is not defined
    with_items:
      - "{{ webmethods_sum_install_patches_runner.sum_home_dir }}"
      - "{{ webmethods_sum_install_patches_runner.execute_dir }}"
      - "{{ webmethods_sum_install_patches_runner.fixes_image_path }}"
      - "{{ webmethods_sum_install_patches_runner.script_path }}"

  - name: Create the command
    set_fact:
      command_to_exec:
        - "{{ webmethods_sum_install_patches_runner.sum_home_dir }}/bin/UpdateManagerCMD.sh"
        - "-readScript"
        - "{{ webmethods_sum_install_patches_runner.script_path }}"
        - "-imageFile"
        - "{{ webmethods_sum_install_patches_runner.fixes_image_path }}"

  - name: append image param if defined
    set_fact:
      command_to_exec: "{{ command_to_exec }} + [ '-installFromImage' ] + [ '{{ webmethods_sum_install_patches_runner.sum_image_path }}' ]"
    when: webmethods_sum_install_patches_runner.sum_image_path is defined and webmethods_sum_install_patches_runner.sum_image_path != ""

  - name: append image param if defined
    set_fact:
      command_to_exec: "{{ command_to_exec }} + [ '-overInstall' ] + [ '{{ webmethods_sum_install_patches_runner.fixes_overinstall | default(false,true) | bool }}' ]"
    when: webmethods_sum_install_patches_runner.fixes_overinstall is defined

  - name: append image param if defined
    set_fact:
      command_to_exec: "{{ command_to_exec }} + [ '-selfUpdate' ] + [ '{{ webmethods_sum_install_patches_runner.sum_selfupdate | default(false,true) | bool }}' ]"
    when: webmethods_sum_install_patches_runner.sum_selfupdate is defined

  - name: Print the command that we're going to run
    debug:
      msg: "About to run: {{ command_to_exec|join(' ') }}"

  # - name: execute async command
  #   command:
  #     argv: "{{ command_to_exec }}"
  #     chdir: "{{ webmethods_sum_install_patches_runner.execute_dir }}"
  #   register: job_result
  #   failed_when: job_result.rc != 0 and job_result.rc != 20

  ## Note, we need to ignore the code=20 which is returned when the fixes are already there
  - name: execute async command
    command:
      argv: "{{ command_to_exec }}"
      chdir: "{{ webmethods_sum_install_patches_runner.execute_dir }}"
    async: "{{ webmethods_install_async }}"
    poll: "{{ webmethods_install_poll }}"
    register: cmd_sleeper
  
  - name: Check status for the install task
    async_status:
      jid: "{{ cmd_sleeper.ansible_job_id }}"
    register: job_result
    until: job_result.finished
    retries: "{{ webmethods_install_async_retries }}"
    delay: "{{ webmethods_install_async_delay }}"
    ignore_errors: yes
    
  - debug: var=job_result verbosity=3

  - name: Fail if return code is not 0
    fail:
      msg: "The command failed due to unexpected success error_code returned"
    when: job_result.rc != 0 and job_result.rc != 20