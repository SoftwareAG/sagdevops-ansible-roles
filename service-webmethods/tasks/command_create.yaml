---

### Needs:
### - service_name
### - service_exec_filepath
### - service_user
### - service_type

  - name: fail if service_name not specified
    fail: 
      msg: "service_name not specified...cannot create."
    when: service_name is not defined or service_name == ""

  - name: get service facts
    service_facts:

  - name: Format service name to {{ service_name }}.service for service_facts lookup
    set_fact:
      service_name_index: "{{ service_name }}.service"

  - name: Print debug message
    debug:
      msg: "Service {{ service_name }} will be created or recreated"

  - name: Check for wM daemon script
    stat: 
      path: "{{ webmethods_install_dir }}/common/bin/daemon.sh"
    register: stat_wmdDaemonFile

  - name: fail if service_exec_filepath not specified
    fail: 
      msg: "service_exec_filepath not specified...cannot create."
    when: service_exec_filepath is not defined or service_exec_filepath == ""

  - name: Create service using daemon script + specific PID file
    command:
      argv:
        - "{{ webmethods_install_dir }}/common/bin/daemon.sh"
        - "-f"
        - "{{ service_exec_filepath }}"
        - "-u"
        - "{{ service_user }}"
        - "-n"
        - "{{ service_name }}"
        - "-T"
        - "{{ service_type }}"
        - "-P"
        - "{{ service_pidfile }}"
    when: stat_wmdDaemonFile.stat.exists and service_pidfile is defined and service_pidfile != ""
  
  - name: Create service using daemon script with general defaults
    command:
      argv:
        - "{{ webmethods_install_dir }}/common/bin/daemon.sh"
        - "-f"
        - "{{ service_exec_filepath }}"
        - "-u"
        - "{{ service_user }}"
        - "-n"
        - "{{ service_name }}"
        - "-T"
        - "{{ service_type }}"
    when: stat_wmdDaemonFile.stat.exists and (service_pidfile is not defined or service_pidfile == "")

  - name: get service facts
    service_facts:

  - name: fail if service is not found
    fail: 
      msg: "service {{ service_name }} is still not found even though we just created it - operation must have failed."
    when: ansible_facts.services[service_name_index] is not defined

  ## call update by default
  - include_tasks: "command_update.yaml"