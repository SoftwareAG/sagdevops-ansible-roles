---


  - name: Print webmethods_apiportal_ssl_zip_path var
    debug: var=webmethods_apiportal_ssl_zip_path

  - name: fail if webmethods_apiportal_ssl_zip_path not specified
    fail: 
      msg: "webmethods_apiportal_ssl_zip_path not specified...cannot do anything."
    when: webmethods_apiportal_ssl_zip_path is not defined or webmethods_apiportal_ssl_zip_path == ""

  - name: convert from the JKS keystore to the CRT/KEY files that HTTPD expects for SSL
    import_role: 
      name: java-certs
    vars:
      command: convert-jks-to-httpd-certs
      java_home: "{{ webmethods_apiportal_java_home }}"
      jks_input_file_path: "{{ webmethods_keystore_local_path }}"
      jks_input_file_password: "{{ webmethods_secrets_keystore_password }}"
      jks_input_file_alias: "{{ webmethods_keystore_keyalias }}"
      httpd_certs_output_dir: "{{ webmethods_keystore_local_path | dirname }}"
      httpd_certs_output_crt_file: "server.crt"
      httpd_certs_output_key_file: "server.key"
      cleanup_intermediary_files: "{{ webmethods_apiportal_ssl_cleanup_intermediary }}"
  
  - name: Create a zip archive of the newly created CRT/KEY files
    archive:
      path:
        - "{{ webmethods_keystore_local_path | dirname }}/server.crt"
        - "{{ webmethods_keystore_local_path | dirname }}/server.key"
      dest: "{{ webmethods_apiportal_ssl_zip_path }}"
      format: zip

  - name: cleanup intermediary files
    file:
      path: "{{ item }}"
      state: absent
    when: webmethods_apiportal_ssl_cleanup_intermediary | bool
    with_items:
      - "{{ webmethods_keystore_local_path | dirname }}/server.crt"
      - "{{ webmethods_keystore_local_path | dirname }}/server.key"