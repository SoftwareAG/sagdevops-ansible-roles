---

  - name: Print webmethods_apiportal_ssl_zip_path var
    debug: var=webmethods_apiportal_ssl_zip_path verbosity=3

  - name: check if apiportal_ssl_zipfile already there
    stat: 
      path: "{{ webmethods_apiportal_ssl_zip_path }}"
    register: apiportal_ssl_zipfile

  - name: create zip file if not there
    include_tasks: "do_create-ssl-certs-archive.yml"
    when: apiportal_ssl_zipfile.stat.exists == false

  - name: set initial facts
    set_fact:
      runnable_suffix: "{{ webmethods_apiportal_acc_install_size_code }}"

  - name: Command apply ssl certs
    block:

      - name: fail if runnable_suffix not specified
        fail: 
          msg: "runnable_suffix not specified...cannot do anything."
        when: runnable_suffix is not defined or runnable_suffix == ""

      - import_role: 
          name: command-apiportal
        vars:
          webmethods_apiportal_acc_command_type: "command"
          webmethods_apiportal_acc_command: "stop loadbalancer_{{ runnable_suffix }}"

      - import_role: 
          name: command-apiportal
        vars:
          webmethods_apiportal_acc_command_type: "command"
          webmethods_apiportal_acc_command: "enhance loadbalancer_{{ runnable_suffix }} with sslCertificate local file {{ webmethods_apiportal_ssl_zip_path }}"

      - import_role: 
          name: command-apiportal
        vars:
          webmethods_apiportal_acc_command_type: "command"
          webmethods_apiportal_acc_command: "start loadbalancer_{{ runnable_suffix }}"

      - name: cleanup zip file once imported
        file:
          path: "{{ webmethods_apiportal_ssl_zip_path }}"
          state: absent
      
    when: webmethods_apiportal_ssl_zip_path is defined and webmethods_apiportal_ssl_zip_path != ""