---

  - name: set initial facts
    set_fact:
      runnable_suffix: "{{ webmethods_apiportal_acc_install_size_code }}"

  - name: fail if runnable_suffix not specified
    fail: 
      msg: "runnable_suffix not specified...cannot do anything."
    when: runnable_suffix is not defined or runnable_suffix == ""

## 1 - killall, start zookeeper only, reconfigure postgres
  
  - name: stop all runnables
    include_tasks: "do_set-stopall.yml"
    vars:
      force: true

  - import_role: 
      name: command-apiportal
    vars:
      webmethods_apiportal_acc_command_type: "command"
      webmethods_apiportal_acc_command: "activate postgres_{{ runnable_suffix }}"

  - import_role: 
      name: command-apiportal
    vars:
      webmethods_apiportal_acc_command_type: "command"
      webmethods_apiportal_acc_command: "start zoo_{{ runnable_suffix }}"

## 2 - Remove enhancement -how?

## 3 - Assign the tenant to the internal service (which is by default ID db0000000000)

  - name: Assign the tenants back to the internal service
    include_tasks: "services/do_assign_service.yml"
    vars:
      __service_id: "db0000000000"

## 4 - De-register external service if it was defined (TODO: we could use a loop to deregister all the db service if there was multiple)

  - name: Get external service id
    include_tasks: "services/do_get-externalservice-latest-id.yml"
    vars:
      rvar_apiportal_configs_externalservice_type: DB
  
  - name: Cleanup external DB service if one was defined
    block:

      - import_role: 
          name: command-apiportal
        vars:
          webmethods_apiportal_acc_command_type: "command"
          webmethods_apiportal_acc_command: "deregister external service {{ externalservice_latest_id }}"

    when: externalservice_latest_id is defined and externalservice_latest_id != ""

## 5 - Cleanup transient data in eladtic search and cloudsearch

  - name: Cleanup transient data (true by default)
    block:

      - debug: 
          msg: "Warning: cleaning up data in elasticsearch and cloudsearch (will backup the data though)"
        
      - name: Move cloudsearch data dir to a backup
        stat: path={{ webmethods_apiportal_work_cloudsearch_dir }}/rsindex
        register: stat_cloudsearch_data

      - name: Move cloudsearch data to bak
        command: mv {{ webmethods_apiportal_work_cloudsearch_dir }}/rsindex {{ webmethods_apiportal_work_cloudsearch_dir }}/rsindex.{{ ansible_date_time.iso8601_basic_short }}.bak
        when: stat_cloudsearch_data.stat.exists

      - name: Move elasticsearch data dir to a backup
        stat: path={{ webmethods_apiportal_work_elastic_dir }}/data/nodes
        register: stat_elasticsearch_data

      - name: Move cloudsearch data to bak
        command: mv {{ webmethods_apiportal_work_elastic_dir }}/data/nodes {{ webmethods_apiportal_work_elastic_dir }}/data/nodes.{{ ansible_date_time.iso8601_basic_short }}.bak
        when: stat_elasticsearch_data.stat.exists

    when: (rvar_apiportal_configs_externaldb.cleanupdata | default('true') | bool) == true

## 6 - startall

  - name: start all runnables
    include_tasks: "do_set-startall.yml"
    vars:
      force: true