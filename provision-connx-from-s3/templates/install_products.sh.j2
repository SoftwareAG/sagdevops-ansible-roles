#!/bin/sh

echo "Begin $0"
 
THIS=`basename $0`
THISDIR=`dirname $0`; THISDIR=`cd $THISDIR;pwd`
THIS_HOSTNAME=`hostname --long`

echo "Current hostname: $THIS_HOSTNAME"
echo "Current folder: $THISDIR"

## load utils functions
function replace_global { 
    local pattern=$1;
    local replacement=$2;
    local file=$3;
    sed -i 's#'"$pattern"'#'"$replacement"'#g' $file
}

## set params from ansible variable values
__work_dir="{{ webmethods_localrepo_target_dir }}"
if [ "x$__work_dir" == "x" ]; then
    echo "[ERROR!! __work_dir value is not set ]"
    exit 2;
fi 
__installer_target_path="{{ webmethods_install_target_dir | default('/opt/softwareag', true) }}"
__installer_script_path="${__work_dir}/responseFile"
__installer_script_path_runtime="${__installer_script_path}.runtime"

#create a new __installer_script_path file before the actual in-text replacement so we always re-create a new file before execution
cp -rf ${__installer_script_path} ${__installer_script_path_runtime}

## replace values in the webMethods Installer script
replace_global "{{ '{{' }} __installer_target_path {{ '}}' }}" "${__installer_target_path}" "${__installer_script_path_runtime}"

echo "Before install - target install dir: $__installer_target_path"
ls -al $__installer_target_path

## run installer
cat ${__installer_script_path_runtime} | /bin/sh ${__work_dir}/installclient

echo "After install - target install dir: $__installer_target_path"
ls -al $__installer_target_path

echo DONE!!