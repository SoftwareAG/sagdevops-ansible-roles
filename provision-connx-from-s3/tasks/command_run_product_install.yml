---
  
- name: fail if webmethods_localrepo_target_dir not specified
  fail: 
    msg: "webmethods_localrepo_target_dir not specified...can't do anything"
  when: webmethods_localrepo_target_dir is not defined or webmethods_localrepo_target_dir == ""

- name: Fetch from s3 the install artifacts
  include_role:
    name: aws-wrapper
  vars:
    command: get-files-from-s3
    getfroms3_files_descriptor_list:
      - bucket_path: "connxInstall/clientlnx.tar.z"
        local_path: "{{ webmethods_localrepo_target_dir }}/clientlnx.tar.z"
        force_download: true
      - bucket_path: "connxInstall/clientsb.tar.z"
        local_path: "{{ webmethods_localrepo_target_dir }}/clientsb.tar.z"
        force_download: true
      - bucket_path: "connxInstall/installclient"
        local_path: "{{ webmethods_localrepo_target_dir }}/installclient"
        force_download: true
      - bucket_path: "connxInstall/serverlist"
        local_path: "{{ webmethods_localrepo_target_dir }}/serverlist"
        force_download: true
      - bucket_path: "connxInstall/responseFile"
        local_path: "{{ webmethods_localrepo_target_dir }}/responseFile"
        force_download: true
    getfroms3_throttle: "{{ rvar_install_downloads_throttle }}"

- name: Write the install scripts on disk with all the params
  template:
    src: "install_products.sh.j2" 
    dest: "{{ webmethods_localrepo_target_dir }}/install_products.sh"
    mode: "0755"
    backup: no

- name: run install_product command
  command: "/bin/bash install_products.sh"
  args:
    chdir: "{{ webmethods_localrepo_target_dir }}"
  async: "{{ rvar_install_async_timeout }}"
  poll: "{{ rvar_install_async_poll }}"
  register: install_product_sleeper

- name: Check status for install_product task
  async_status:
    jid: "{{ install_product_sleeper.ansible_job_id }}"
  register: job_result
  until: job_result.finished
  retries: "{{ rvar_install_async_retries }}"
  delay: "{{ rvar_install_async_delay }}"

- name: Print the job_result to the console.
  debug:
    msg: "{{ job_result.stdout_lines | join('\n') }}"

- include_tasks: "command_add_registry_vars.yml"