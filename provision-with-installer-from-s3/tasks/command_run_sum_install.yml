---

  - name: check if sum already installed
    stat: 
      path: "{{ webmethods_install_sum_target_dir }}/bin/SUMlauncher.jar"
    register: sum_installed

  - name: SUM installed status
    debug:
      var: sum_installed.stat.exists

  - name: Set changed flag to false if not defined
    set_fact: 
      provision_with_installer_from_s3_sum_changed: false
    when: provision_with_installer_from_s3_sum_changed is not defined

  - name: Install SUM only if it's not already there
    block:

      - name: fail if webmethods_localrepo_target_dir not specified
        fail: 
          msg: "webmethods_localrepo_target_dir not specified...can't do anything"
        when: webmethods_localrepo_target_dir is not defined or webmethods_localrepo_target_dir == ""

      - name: "Include tasks to fetch the sum installer files from s3"
        include_tasks: "command_get_files_from_s3.yml"
        vars:
          webmethods_provisioning_files_download_descritors:
            - bucket_path: "{{ webmethods_s3repo_fixes_image_filename }}"
              local_path: "{{ webmethods_localrepo_fixes_image_filename | default('sum_image.zip', true) }}"
            - bucket_path: "{{ webmethods_s3repo_sum_filename }}"
              local_path: "{{ webmethods_localrepo_sum_filename | default('softwareagupdatemanager-linux.bin', true) }}"

      - name: Write the install scripts on disk with all the params
        template:
          src: "install_sum.sh.j2" 
          dest: "{{ webmethods_localrepo_target_dir }}/install_sum.sh"
          owner: "{{ webmethods_install_localtarget_files_owner_user }}"
          group: "{{ webmethods_install_localtarget_files_owner_group }}"
          mode: "{{ webmethods_install_localtarget_files_permissions }}"
          backup: no

      - name: run install_sum command
        command: "/bin/bash install_sum.sh"
        args:
          chdir: "{{ webmethods_localrepo_target_dir }}"
        async: "{{ webmethods_install_async }}"
        poll: "{{ webmethods_install_poll }}"
        register: install_sum_sleeper

      - name: Check status for install_sum task
        async_status:
          jid: "{{ install_sum_sleeper.ansible_job_id }}"
        register: job_result
        until: job_result.finished
        retries: "{{ webmethods_install_async_retries }}"
        delay: "{{ webmethods_install_async_delay }}"

      - name: Print the job_result to the console.
        debug:
          msg: "{{ job_result.stdout_lines | join('\n') }}"

      - name: Set changed flag to true
        set_fact:
          provision_with_installer_from_s3_sum_changed: true
  
    when: sum_installed.stat.exists == false or webmethods_sum_force_install == true