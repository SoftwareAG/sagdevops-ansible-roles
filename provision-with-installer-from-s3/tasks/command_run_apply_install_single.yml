---

- debug: var=webmethods_install_products_descriptor verbosity=3

- name: fail if mandatory params not specified
  fail:
    msg: "A mandatory param was not defined, cannot do anything."
  when: item is not defined
  with_items:
    - "{{ webmethods_install_products_descriptor.script }}"
    - "{{ webmethods_install_products_descriptor.binaries_image }}"

- name: Fetch from s3 the install artifacts
  include_role:
    name: aws-wrapper
  vars:
    command: get-files-from-s3
    getfroms3_files_descriptor_list:
      - "{{ webmethods_install_products_descriptor.installer }}"
      - "{{ webmethods_install_products_descriptor.script }}"
      - "{{ webmethods_install_products_descriptor.binaries_image }}"
    getfroms3_throttle: "{{ rvar_install_downloads_throttle }}"

- name: fetch from s3 the licenses needed by the installer
  include_role:
    name: aws-wrapper
  vars:
    command: get-files-from-s3
    getfroms3_files_descriptor_list:
      - "{{ webmethods_install_products_descriptor.licenses }}"

- name: Copy script file to a working runtime copy
  copy:
    src: "{{ webmethods_install_products_descriptor.script.local_path }}"
    dest: "{{ webmethods_install_products_descriptor.script.local_path }}.runtime"
    mode: '0644'
    remote_src: yes

- name: Update the script file with values from the variables
  replace:
    path: "{{ webmethods_install_products_descriptor.script.local_path }}.runtime"
    backup: no
    regexp: "{{ ['{{', item.key , '}}'] | join('[ ]*') }}"
    replace: "{{ item.value }}"
  with_dict:
    __installer_target_path: "{{ webmethods_install_products_descriptor.target_install_dir }}"
    __installer_product_image: "{{ webmethods_install_products_descriptor.binaries_image.local_path }}"
    __installer_target_hostname: "{{ ansible_hostname }}"

- name: Update the script file with license values
  replace:
    path: "{{ webmethods_install_products_descriptor.script.local_path }}.runtime"
    backup: no
    regexp: "{{ [ '{{' , (['__installer_product_license.', (item.0 + 1) ] | join('')) , '}}' ] | join('[ ]*') }}"
    replace: "{{ item.1.local_path }}"
  with_indexed_items: "{{ webmethods_install_products_descriptor.licenses }}"

- name: run the install
  include_tasks: "runners/run_installer.yml"
  vars:
    webmethods_installer_runner:
      executable: "{{ webmethods_install_products_descriptor.installer.local_path  }}"
      execute_dir: "{{ webmethods_install_products_descriptor.installer.local_path | dirname }}"
      script_path: "{{ webmethods_install_products_descriptor.script.local_path }}.runtime"