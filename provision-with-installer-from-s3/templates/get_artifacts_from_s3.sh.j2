#!/bin/sh

#############################################################################################
######## parameter section that changes from products to products
#############################################################################################

REMOTE_S3_BUCKET="{{ webmethods_s3repo_bucket_name }}"
REMOTE_S3_BUCKET_PREFIX="{{ webmethods_s3repo_bucket_prefix }}"
REMOTE_S3_BUCKET_SCRIPT_FOLDER="{{ webmethods_s3repo_scripts_dir }}"
LOCAL_TARGET_DIR="{{ webmethods_localrepo_target_dir | default('/opt/softwareag/sag_install_artifacts', true) }}"

## installers
REMOTE_S3_BUCKET_PRODUCT_INSTALLER="{{ webmethods_s3repo_installer_filename }}"
LOCAL_PRODUCT_INSTALLER="$LOCAL_TARGET_DIR/{{ webmethods_localrepo_installer_filename | default('softwareaginstaller-linux.bin', true) }}"
REMOTE_S3_BUCKET_PRODUCTUPDATES_INSTALLER="{{ webmethods_s3repo_sum_filename }}"
LOCAL_PRODUCTUPDATES_INSTALLER="$LOCAL_TARGET_DIR/{{ webmethods_localrepo_sum_filename | default('softwareagupdatemanager-linux.bin', true) }}"

## licenses
REMOTE_S3_BUCKET_LICENSES="{{ webmethods_s3repo_license_zip_filename }}"
LOCAL_LICENSE_ZIP="$LOCAL_TARGET_DIR/{{ webmethods_localrepo_license_zip_filename | default('licenses.zip', true) }}"
REMOTE_S3_BUCKET_INZIP_LICENSE_PATH="{{ webmethods_s3repo_inzip_license_filepath }}"
LOCAL_LICENSE_PATH="$LOCAL_TARGET_DIR/{{ webmethods_localrepo_license_filepath | default('installer_license.xml', true) }}"

## products
REMOTE_S3_BUCKET_PRODUCT_IMAGE="{{ webmethods_s3repo_products_image_filename }}"
LOCAL_PRODUCT_IMAGE="$LOCAL_TARGET_DIR/{{ webmethods_localrepo_products_image_filename | default('installer_image.zip', true) }}"
REMOTE_S3_BUCKET_PRODUCT_SCRIPT="${REMOTE_S3_BUCKET_SCRIPT_FOLDER}/{{ webmethods_s3repo_products_autoscript_filename }}"
LOCAL_PRODUCT_SCRIPT="$LOCAL_TARGET_DIR/{{ webmethods_localrepo_products_autoscript_filename | default('installer.script', true) }}"

## fixes
REMOTE_S3_BUCKET_FIX_IMAGE="{{ webmethods_s3repo_fixes_image_filename }}"
LOCAL_FIX_IMAGE="$LOCAL_TARGET_DIR/{{ webmethods_localrepo_fixes_image_filename | default('sum_image.zip', true) }}"
REMOTE_S3_BUCKET_FIX_SCRIPT="${REMOTE_S3_BUCKET_SCRIPT_FOLDER}/{{ webmethods_s3repo_fixes_autoscript_filename }}"
LOCAL_FIX_SCRIPT="$LOCAL_TARGET_DIR/{{ webmethods_localrepo_fixes_autoscript_filename | default('sum.script', true) }}"

#############################################################################################
######## generic download section
#############################################################################################

THIS=`basename $0`
THISDIR=`dirname $0`; THISDIR=`cd $THISDIR;pwd`

# make sure the download helper is here
if [ ! -f $THISDIR/download_helper.sh ]; then
    echo "[ERROR!! Script file $THISDIR/download_helper.sh not found... we need it to download artifacts ]"
    exit 2;
else
    . $THISDIR/download_helper.sh
fi

## execute download
download_artifacts

echo "DONE!!!"