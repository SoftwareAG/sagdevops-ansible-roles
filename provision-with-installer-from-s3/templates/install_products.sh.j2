#!/bin/sh

echo "Begin $0"
 
THIS=`basename $0`
THISDIR=`dirname $0`; THISDIR=`cd $THISDIR;pwd`
THIS_HOSTNAME=`hostname --long`

echo "Current hostname: $THIS_HOSTNAME"
echo "Current folder: $THISDIR"

## load utils functions
function replace_global { 
    local pattern=$1;
    local replacement=$2;
    local file=$3;
    sed -i 's#'"$pattern"'#'"$replacement"'#g' $file
}

## set params from ansible variable values
__work_dir="{{ webmethods_localrepo_target_dir }}"
if [ "x$__work_dir" == "x" ]; then
    echo "[ERROR!! __work_dir value is not set ]"
    exit 2;
fi 

__installer_license_base_path="{{ webmethods_localrepo_license_extractedzip_path }}"
if [ "x$__installer_license_base_path" == "x" ]; then
    echo "[ERROR!! __installer_license_base_path value is not set ]"
    exit 2;
fi

__installer_script_path="${__work_dir}/{{ webmethods_localrepo_products_autoscript_filename | default('installer.script', true) }}"
__installer_script_path_runtime="${__installer_script_path}.runtime"
__installer_target_path="{{ webmethods_install_target_dir | default('/opt/softwareag', true) }}"
__installer_product_image="${__work_dir}/{{ webmethods_localrepo_products_image_filename | default('installer_image.zip', true) }}"
__installer_target_hostname="{{ ansible_fqdn }}"

#create a new __installer_script_path file before the actual in-text replacement so we always re-create a new file before execution
cp -rf ${__installer_script_path} ${__installer_script_path_runtime}

## replace values in the webMethods Installer script
replace_global "{{ '{{' }} __installer_target_path {{ '}}' }}" "${__installer_target_path}" "${__installer_script_path_runtime}"
replace_global "{{ '{{' }} __installer_product_image {{ '}}' }}" "${__installer_product_image}" "${__installer_script_path_runtime}"
replace_global "{{ '{{' }} __installer_target_hostname {{ '}}' }}" "${__installer_target_hostname}" "${__installer_script_path_runtime}"

## there could be multiple licenses to put in the install script...
{% if webmethods_localrepo_license_inzip_filepath_list is defined %}
    echo "Performing license replacement based on values in ansible variable [webmethods_localrepo_license_inzip_filepath_list]"
    {% for license_filepath in webmethods_localrepo_license_inzip_filepath_list %}
    replace_global "{{ '{{' }} __installer_product_license.{{ loop.index }} {{ '}}' }}" "${__installer_license_base_path}/{{ license_filepath }}" "${__installer_script_path_runtime}"
    {% endfor %}
{% else %}
    echo "ansible variable [webmethods_localrepo_license_inzip_filepath_list] not defined. No license replacement done."
{% endif %}

echo "Before install - target install dir: $__installer_target_path"
ls -al $__installer_target_path

## run installer
/bin/sh {{ webmethods_localrepo_installer_filename | default('softwareaginstaller-linux.bin', true) }} -scriptErrorInteract no -readScript ${__installer_script_path_runtime}

echo "After install - target install dir: $__installer_target_path"
ls -al $__installer_target_path

echo DONE!!